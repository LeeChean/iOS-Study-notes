**********************************
2015年9月10日14:46:07
**********************************

1、前一段时间过了一遍Objective-C的语法，对OC有了一个基本的了解，接下来开始熟悉iOS项目。首先来搞清楚开发一个项目时几个关键的问题。根据之前做PC端项目的经验，大致面临以下几个问题：
   1）项目类型有哪些
	  就目前的了解，iOS项目大致可以有两类：独立的iOS项目和iOS+web的组合项目，啥意思呢？第一种指的是整个项目由iOS独立完成，类似于cs项目，不涉及到网络部分，其实现在的应用程序或多或少都会涉及到网络，孤立的应用通常是没有生命力的。
	  第二种是需要和web服务器通讯共同完成的项目，比如调用asp.net api方法，不过有一点要注意，web服务器和手机交互时数据必须是JSON格式的，就像PC端浏览器和web服务器交互的数据是Html格式的一样。
   2）数据存储（这里都是存到手机端）
      在iOS中保存数据的方式：
      ① NSKeyedArchiver 归档的形式来保存，这是个新概念，需要消化一下。
		
		 发现一些iOS的基础知识还是必须先过一遍的，先去恶补，此处Mark一下。
	
	
	  ② NSUserDefaults 一般用来保存一些用户的配置信息，而且退出程序后数据仍然存在。具体保存到哪需要细细研究。
	  
      ③ Write写入 保存到磁盘中。
	  
	  ④ SQLite 由于手机的配置相对于PC机还是太低，所以不可能支撑起SQLServer或Oracle那样的数据库，SQLite是一种轻型的嵌入式关系型数据库，占用资源非常低，速度快，直接安装在手机端，嵌入式和移动客户端（如Android和iOS）一般都使用它。
	  

2、下面根据iOS知识框架图先过一遍基础知识。UIKit框架基本都是一些UI控件的使用，可以先看一遍斯坦福白胡子爷爷的视频教程。




**********************************
2015年9月11日10:44:08
**********************************

1、看斯坦福教程第4讲，碰到了一个新概念，property list，下面就研究研究它。简单的说，就是一个通过键值对存储信息的配置文件，app运行起来后可以读取里面的信息。但注意：值可以是String、Array、Dictionary、Boolean、Data、Date、Number类型。
至于iOS是如何保存的先暂时一放，总之这个文件用来存放一些数据信息，app可以通过代码操作里面的数据。property list在iOS和OS X中都可以使用，具体参考官方文档Property List Programming Guide。
   property list一般用来保存少量的数据，即少于几百K的数据，如果要存储大量的，且结构比较复杂的数据，则使用归档(Archive)。


2、先了解一下什么是xib文件：
   iOS和OS X中都有这个东西。是Interface Builder的图形界面设计文档，类似于visual studio中的图形界面，可以拖拽一些可见元素到app中，如windows、views、controls和menus等，还可以拖一些不可见的元素，如controllers，及view和controller
之间的关联。app会将这些信息保存到nib文件中，而且相比写代码的方式更方便。
   类似的还有一个nib文件，不过是在Xcode3.0之前版本中使用的。nib全称是NeXT Interface Builder,xib是xml nib。
   
3、教授讲到了Attribute String，然后查阅官网，了解Attribute String是何许东西？有NSAttributedString和NSMutableAttributedString连个类，表示带属性的字符串，这些属性包括字体、字间距等样式。

4、发现看教授的视频效果不是很理想，有些知识点还是不懂。需要额外再查资料。一会是Foundation一会又是UIKit，这些到底是什么，之间又有什么关系呢？还是先弄清楚iOS（或OS X）整个的架构吧。其实可以分为5层：
   Application：
   这层就是我们自己写的app，可以调下面四层的东西。
   Cocoa Touch：
   这层主要解决和用户交互的问题，如界面显示、用户点击、拖拽、触摸屏幕等等。这层有个重要的框架，UIKit，需要详细了解。
   Media：
   这层主要解决多媒体和手机设备的交互。
   Core Services:
   这层可以访问一些底层的iOS服务，如访问文件，数据类型，网络服务等等。这层有个重要的框架，Foundation，需要详细了解。
   Core OS：
   这层完成管理内存、线程、文件系统、网络、各个框架的进程间通信等任务。这也是iOS开发者能接触的最底层。
   
5、下面就来详细看下Foundation里又有什么东西。重点搞清楚下面几个概念：
   常用的结构体：
       这些是Foundation框架封装好的结构体，方便我们使用，并不是OC的基础类型。另外注意一点，结构体不是对象，在栈上分配空间，不是堆上。所以变量名前不用加*号。
       主要是NSRange、NSPoint、NSSize、NSRect等。
       1) NSRange
	      ① 创建
		     NSRange range = {2,3};
			 NSRange range = NSMakeRange(3,5);
			 表示一个范围，第一个参数是起始下标，第二个参数是长度。
	      ② 常用方法见官方文档
		2) NSPoint
		  ① 创建
		     NSPoint point = NSMakePoint(2,5);
			 注意一点，NSMakePoint方法的参数是CGFloat类型，这种类型在32位机器上会转成float类型，在64位机器上会转成double类型，所以兼容性更好些。写法上和普通的浮点型数字没有区别。
			 表示笛卡尔积里的一个点。回顾一下啥是笛卡尔积，指任意两个集合X和Y，从X中选一个元素a，从Y中选一个元素b，则{a,b}就表示集合X和集合Y的笛卡尔积里的一个元素。NSPoint结构就表示这样的一个元素。
			 由NSRange和NSPoint可知，无论是范围还是点都是宽泛的定义，范围可以用在字符串里，也可以用在数组里，点可以表示x坐标和y坐标上的一个点，也可以表示其他的含义。适度的抽象，可大大的提高代码的可重用性。可以借鉴
			 Objective-C中定义结构的思路。
	    3) NSSize
		  ① 创建
		     NSSize size = NSMakeSize(5,6);
			 NSSize表示二维空间的大小，第一个参数是width宽，第二个参数是height高，都是CGFloat类型。
		4) NSRect
		  ① 创建
		     NSRect rect = NSMakeRect(1,2,5,6);
			 NSRect表示二维空间里的一个矩形，第一个参数是x坐标，第二个参数是y坐标，前两个参数可以看做一个点，画矩形的起始点，第三个参数是width，第四个参数是height，后两个参数可以看做是一个NSSize。
			 
   日期
       
   
   字符串
   
   数组
   
   字典
   
   装箱和拆箱
   
   反射
   
   拷贝
   
   文件操作
   
   归档
   